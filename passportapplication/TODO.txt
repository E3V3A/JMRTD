JMRTD/SCUBA TODO (it's not a changelog, it's not a roadmap, it's a TODO file)

VERSION 0.4.3
-------------

+ Woj's EAC stuff.

VERSION 0.4.4
-------------

General
+ Revert back to one jmrtd.jar (includes all of SCUBA) in distribution.
+ Move LDS data classes (*File, *Info) into org.jmrtd.lds package.
+ Move BACStore to passporthostapi (from passportapplication).
+ Fix unit test (when run from package explorer hangs on DG14 tests).
+ Make loading of GRT compatible ZIP files possible. They seem to use EF_DG<X>.BIN naming inside ZIP files. Test it.
+ Store BACStore, CSCAStore, CVCAStore, preferences in APPDATA subdir, not in user.home/.jmrtd

Preferences
+ Tabbed panes in preferences.
+ APDU tracing from preferences, at least for card manager (also for reload action?).
+ Preferences persistent storage based on JSR-10.
+ CSCA and CVCA folder settings from tab in preferences window.
+ Remember location of directory from which (passport) files were loaded, return there when opening new file.

Dependencies
+ Latest JAI ImageIO 1.2
+ Latest Bouncy Castle 1.45

Code quality
+ Run Findbugs.

Web site (jmrtd.org)
+ Check new docs on ICAO site, update links.
+ Fix scmmicro.com broken links in install.shtml.
+ Add a link to http://wiki.yobi.be/wiki/EPassport#Manufacturers (which manufacturer makes ePassport for which country?) on csca.shtml.

VERSION 0.4.5 / 0.5.x
---------------------

General
- Uniform handling of BAC, CSCA, CVCA stores.
- Use Java keystores instead of directories with flat files?
- Move BAC logic from PassportFrame to Passport class.
- Move readFromService logic from PassportFrame to the Passport class.
- Move the verifySecurity logic from PassportFrame to Passport class.
- Move some of the PKCS7 signature checking stuff from SODFile to SCUBA (it's not MRTD specific).
- Get DG3 (finger) bio template I/O to the same level as DG2 (face)
+ ImageIO support for WSQ finger print images, using JNI wrapping around C files (http://sourceforge.net/ffpis).
- LDAP interface (JNDI) to PKD?
- Support for certificate revocation lists
- Check dependencies on BC in public interfaces. Especially in Woj's EAC stuff.
- Adoption of Henning's stuff in SCUBA (finger printing Nationality of passports based on error messages) is buggy for now. Need more regression testing.
- Show progress during BAC testing in PassportFrame constructor
  (especially since some MRTDs now wait for a long time after failed attempt).
- Display EAC information (now it only does this if DG14 present _and_ succesful EAC event.
- Copy default files from distribution jar into .jmrtd/ (e.g. CSCA certs) so that a standard profile is created.
- Fix "Card has been disconnected" error in acrprovider? Restore gracefully.
- Fix padding error during AA on Omnikey 5121 on newer versions of NIK. Restore gracefully from session?
- Only go to editor mode if user explicitly indicates (default display mode should be not editable).
- When creating a new passport from scratch the user should be able to select either ID-1 or ID-3 (3 or 2 line MRZ).
  Currently its hardcoded to ID-1.

User interface
- Alternative view (file tree style) on passport, showing all files available with option to save individual files as binary dumps.
  Perhaps even allow ASN.1 tree in a JTree.
- In general: better interaction, based on user purpose (inspection / security testing / personalization / identity provisioning).
  Check the Da Costa presentation at BlackHat 2010.

ASN.1 parsing
- Test TLV input streams based on chaosinmotion stuff. Write tests. If ok, use those instead.
- ASN.1 DGs based on JavaAsn1Compiler stuff (maybe just for testing, maybe generate bits of the actual DG*File and *Info classes).

SCUBA support for exotic card readers
- Use Roel's libnfc with JNI wrapper for support of other readers (Arygon, etc.).
- JCOP tools supported terminals such as Pegoda (need to purchase one for this?).

Dependencies
- cert-cvc latest. Need EAC samples to test. Woj still has samples?
- Check/update README and Web site to reflect correct version numbers.

Code quality
- Findbugs
- Profiling (http://www.eclipse.org/tptp/home/documents/tutorials/profilingtool/profilingexample_32.html)


Web site and documentation
- A FAQ would be nice
- Compile-it-yourself instructions

VERSION 0.9.x
-------------

Features
- Webcam OCR of MRZ. How difficult could this be, really? It's always OCR-B font, one could assume fixed
  distance so that auto-focus isn't even necessary. See also https://sourceforge.net/projects/javaocr/.
- WSQ image support in pure Java.
- Nokia NFC relay terminal via Bluetooth. Implement a MIDlet for this.

Code quality
- ESC/Java2

Documentation
- Proper system documentation
- Proper user documentation
